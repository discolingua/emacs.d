;; turn off unused GUI bits
(tool-bar-mode -1)
(scroll-bar-mode -1)
(menu-bar-mode -1)
(blink-cursor-mode -1)
(setq inhibit-splash-screen t)
(setq initial-scratch-message nil)
(setq echo-keystrokes 0.1)
(defalias 'yes-or-no-p 'y-or-n-p)

;; set load paths, ~/.emacs.d/lisp/ and subdirs
(let ((default-directory "~/.emacs.d/lisp/")) 
      (normal-top-level-add-to-load-path '("."))
      (normal-top-level-add-subdirs-to-load-path))

(require 'package)
(add-to-list 'package-archives
	     '("melpa" . "http://melpa.milkbox.net/packages/") t)
(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))

; (require 'yasnippet-bundle)

;; LANGUAGE SPECIFIC STUFF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; SLIME (for Common Lisp)
(setq inferior-lisp-program "/usr/local/bin/clisp")
    (require 'slime)
    (slime-setup '(slime-fancy))

; tads-mode (for authoring text adventures)
(autoload 'tads-mode "tads-mode" "TADS editing mode." t)
(setq auto-mode-alist
      (append (list (cons "\\.t$" 'tads-mode))
	      auto-mode-alist))

(require 'lua-mode)

; ESS-mode for statistics (e.g. R)
(require 'ess-site)


; Processing
(autoload 'processing-mode "processing-mode" "Processing mode" t)
(add-to-list 'auto-mode-alist '("\\.pde$" . processing-mode))
(setq processing-location "/usr/bin/processing-java")


;; BITS AUTOGENERATED BY EMACS (CUSTOM-SET) ;;;;;;;;;;;;;;;

(custom-set-variables
 '(erc-nick "h_double")
; '(erc-server "irc.synirc.net")
 '(erc-server "irc.freenode.net")
 '(safe-local-variable-values (quote ((folded-file . t)))))

(custom-set-faces
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry "apple" :family "Monaco")))))
 
(cond ((eq window-system 'ns) (require 'color-theme) ; only if windowed client
       (eval-after-load "color-theme"
	 '(progn
	    (server-start) ; server for emacsclient
	    (menu-bar-mode 1)
	    (color-theme-initialize)
	    (color-theme-solarized-dark)))))


